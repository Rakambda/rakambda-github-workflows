name: Gradle Minecraft publish

on:
  workflow_call:
    inputs:
      java-version:
        description: "JDK version to use"
        required: true
        type: string
      java-distribution:
        description: "JDK distribution to use"
        required: false
        type: string
        default: "temurin"
    secrets:
      keystore:
        required: false
      keystore-passphrase:
        required: false
      key-alias:
        required: true
      key-store-pass:
        required: true
      key-pass:
        required: true
      curseforge-token:
        required: true
      modrinth-token:
        required: true

jobs:
  publish:
    name: Gradle - Publish
    runs-on: ubuntu-latest
    concurrency: publish
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: ${{ inputs.java-distribution }}
          java-version: ${{ inputs.java-version }}

      - name: Restore keystore
        if: secrets.keystore != null
        run: |
          echo "${{ secrets.keystore }}" > keystoreForgeMods.jks.asc
          gpg -d --passphrase "${{ secrets.keystore-passphrase }}" --batch keystoreForgeMods.jks.asc > keystoreForgeMods.jks

      - name: Get release
        id: get_release
        uses: bruceadams/get-release@v1.3.2
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Publish
        uses: gradle/gradle-build-action@v2.8.0
        with:
          cache-disabled: true
          arguments: |
            clean
            build
            curseforge
            modrinth
            modrinthSyncBody
            -PforgeKeyStore=keystoreForgeMods.jks
            -PforgeKeyStoreAlias=${{ secrets.key-alias }}
            -PforgeKeyStorePass=${{ secrets.key-store-pass }}
            -PforgeKeyStoreKeyPass=${{ secrets.key-pass }}
            -PforgeSignSHA1=f927f4701bf4c0620c7bd0a501ce278f5e5ecc62
            -PcurseforgeApiKey=${{ secrets.curseforge-token }}
            -PmodrinthToken=${{ secrets.modrinth-token }}
            -Pversion=${{ steps.get_release.outputs.name }}
            -Pchangelog="[Changelog at ${{ steps.get_release.outputs.html_url }}](${{ steps.get_release.outputs.html_url }})
            
            ${{ steps.get_release.outputs.body }}"
